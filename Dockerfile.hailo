# syntax=docker/dockerfile:1.7-labs
# ^ this can be removed when the `COPY --parents` syntax reaches stable

FROM debian:12

SHELL ["/bin/bash", "-c"]

# Keep packages in build cache to speed rebuilding
RUN rm -f /etc/apt/apt.conf.d/docker-clean; echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' > /etc/apt/apt.conf.d/keep-cache


##########################
##  Build ROS 2
##########################
ARG ROS_DISTRO=kilted

# Install python3-vsctools here and ignore in rosdep install - Debian package has slightly different name
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
     apt update && \
     apt upgrade -y && \
     apt install -y vcstool python3-rosdep2 python3-vcstools colcon build-essential curl
WORKDIR /ros2_ws
RUN mkdir src && vcs import --input https://raw.githubusercontent.com/ros2/ros2/$ROS_DISTRO/ros2.repos src
ADD https://github.com/ros-perception/vision_msgs.git#ros2 /ros2_ws/src/ros-perception/vision_msgs
# Install Rust manually because the version in apt is not recent enough for zenoh
ENV PATH=/root/.cargo/bin:$PATH
RUN curl --proto '=https' --tlsv1.3 -sSf https://sh.rustup.rs | sh -s -- -y && cargo --version
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
     apt update && apt upgrade -y && rosdep update && \
     rosdep install --from-paths src --ignore-src --rosdistro $ROS_DISTRO -y --skip-keys "fastcdr rti-connext-dds-7.3.0 urdfdom_headers python3-vcstool"

# TODO -DCMAKE_CXX_FLAGS="-Wno-maybe-uninitialized" due to this issue https://github.com/eProsima/Fast-DDS/issues/5277
RUN . $HOME/.cargo/env && colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release  -DCMAKE_CXX_FLAGS="-Wno-maybe-uninitialized" --packages-up-to geometry2 launch launch_ros rcl rmw_cyclonedds_cpp rmw_implementation ros2cli_common_extensions image_common vision_msgs


##########################
##  Hailo
##########################
COPY colcon_entrypoint.sh /colcon_entrypoint.sh
ENTRYPOINT [ "/colcon_entrypoint.sh" ]

# Add raspberry pi sources for hailo
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    apt update && apt install -y curl gpg && \
    curl -fsSL http://archive.raspberrypi.com/debian/raspberrypi.gpg.key | gpg --dearmor -o /usr/share/keyrings/raspberrypi.gpg && \
    echo "deb [arch=arm64 signed-by=/usr/share/keyrings/raspberrypi.gpg] http://archive.raspberrypi.com/debian/ bookworm main" > /etc/apt/sources.list.d/raspi.list

WORKDIR /colcon_ws
RUN mkdir src
# Install custom rosdep rule for hailo-all
COPY ./rosdep.list /etc/ros/rosdep/sources.list.d/00-hailo.list
COPY ./rosdep.yaml /hailo_rosdep.yaml
# Install rosdeps without copying source code yet
COPY --parents ./**/package.xml src/
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    . /ros2_ws/install/setup.bash && \
    apt update && apt upgrade -y && rosdep update && \
    rosdep install --from-paths src --ignore-src --rosdistro $ROS_DISTRO -y
# Bring in the modified detection code
COPY ./hailo_detect_ros/ src/hailo_detect_ros
#ADD https://github.com/mjforan/Hailo-Application-Code-Examples.git src/hailo_detect_ros/src
RUN . /ros2_ws/install/setup.bash && \
    colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release
# Available models: https://github.com/hailo-ai/hailo_model_zoo/blob/master/docs/public_models/HAILO8L/HAILO8L_object_detection.rst
ADD https://hailo-model-zoo.s3.eu-west-2.amazonaws.com/ModelZoo/Compiled/v2.14.0/hailo8/yolov8s.hef /model.hef

CMD ros2 run hailo_detect hailo_detect --ros-args -p model:=/model.hef -p source:=/dev/video51
# HAILO_MONITOR=1
